Pin assignments.

Subject to change depending on the final PCB layout.  With point to point
wiring it won't matter.

The display select lines are active high as they drive the common cathode
LEDs via a common emitter transistor.

1	Vcc
2	PB0		Piezo input.
3	PB1		DP (active high)
4	/RESET
5	PB2,OC0A	Left LED display select (active high)
6	PA7,OC0B	Right LED display select (active high)
7	PA6		a segment (all active high)
8	PA5		b segment
9	PA4		c segment
10	PA3		d segment
11	PA2		e segment
12	PA1		f segment
13	PA0		g segment
14	GND


Random notes.

- Power from a 3V CR2032 Lithium cell.

- Use the ATtiny84/V or ATtiny84A.  Both will work down to 1.8V at up to 4MHz.

- The default 1Hz internal clock should be more than sufficient, and there's no
  need for great timing accuracy.

- Power down current for those MCUs is less than 1uA.

- When in power down mode, turn off all the peripherals.  Wake only on a pin
  change interrupt.  I have confirmed that this uses very little current, with
  the cat toy project.

- Display will be two 7 segment LED displays.  That needs 10 pins - seven
  segments plus the decimal point, plus two display select pins.

- The display can be multiplexed with a timer interrupt, and the display
  brightness can be changed in the interrupt using PWM mode (change the OCRnx
  value in the interrupt).

- The display select pins will need buffer transistors, partly to avoid the
  maximum source/sink current, and partly to prevent the display brightness
  varying depending on the number of segments lit.

- Add in the pin needed for the piezo (for both knock detection and beeping)
  and that just leaves the reset pin vacant.  Not a pin to spare!

- Try to fit in the smallest ABS case with a clear lid, for example the
  Altronics H0320 (65x60x40mm.)
